可行性报告
 主要讨论软件是否应做
    经济可行性
    技术可行性
    组织、社会可行性
 可行性报告

需求分析
  明确
     用户对系统的要求，
     业务功能需求，
     系统功能需求，
     性能需求，
     数据需求，
     外部接口，
     待解决问题

 概要设计
     划分模块接口
     系统架构
     功能模块设计
     数据库设计
     接口设计

  架构图
  时序图
  ER图/结构数据模型
  接口文档
  概要设计说明

详细设计
   在概要设计的基础上，扩展细化，交互界面，性能，输入、输出，算法和模块内数据结构
   详细设计说明书

编码

测试



.......................
可行性分析报告
问题的定义、规划
需求分析
项目开发计划
软件设计
程序编码
数据库设计
进度报告
软件测试
测试计划
测试分析报告
运行维护
操作手册

..........................

可行性报告
    目的: 项目在技术上、经济上、社会条件上的可行性
         论述为达到开发目的而可能选择的各种方案、说明并认证所选定的方案

    内容:
         引言: 编写目的、背景、定义、参考资料
         前提: 要求、目标、条件、假定、限制、可行性研究的方法、评价尺度
         现有系统分析: 数据流程和处理流程、工作负荷、费用开支、人员、设备、局限性
         建议的系统: 对系统的说明、数据流程和处理流程，改进之处、影响、局限性、技术条件方面
                    可选择的其它方案
                    投入和收益分析: 支出、收益、收益/投资比、投资回收周期、敏感性分析、社会条件方面的可行性

开发计划
    目的: 开发过程中有关各项工作的负责人员、开发进度、经费预算、软硬件的安排
    内容: 引言(编写目的、背景、定义、参考资料)、
         项目概述（工作内容、主要参加人员、产品成果、验收标准、完成项目的最迟期限、本计划的审查者与批准者)
         实施总计划(工作任务的分解、接口、人员、进度、预算、关键问题)
         支持条件(计算机系统的支持、用户承担的工作、外单位提供的条件)
         专题计划要点

软件需求说明书
    目的: 使用户和软件开发者双方对软件的初始规定有一个共同的理解，使之成为整个开发工作的基础
    内容: 引言(编写目的、背景、定义、参考资料)
         任务概述（目标、用户的特点、假定与约束
         需求规定 (对功能的规定、对性能的规定、输入输出要求、数据管理能力要求、故障处理要求、故障处理要求、专门要求)
         运行环境规定 (设备、支撑软件、接口、控制)

数据要求说明书
    目的: 向整个开发时期提供关于被处理数据的描述和数据采集要求的技术信息
    内容：引言(编写目的、背景、定义、参考资料)
         数据的逻辑描述(静态数据、动态输入数据、动态输出数据、内部生成数据、数据约定)
         数据的采集(要求和范围、输入的承担者、处理、影响)

总体设计说明书
    目的: 说明一个软件系统各个层次的第一个程序（每个模块或子程序）的设计考虑
    内容: 引言（编写的目的、背景、定义、参考资料等）
         程序系统的组织结构、各程序（标识符）设计说明
    注意: 如果软件系统比较简单、层次很少，也可以不用有详细设计书明书

数据库设计说明书
    目的: 对于设计中的数据库的所有标识符号、逻辑结构和物理结构做出具体的规定
    内容：引言( 编写目的、背景、定义、参考资料等)，
         外部设计(标识符和状态、使用它的程序、约定、专门指导、支撑软件)、
         结构设计(概念、逻辑和物理结构设计)
         运用设计(数据字典设计、安全保密设计)
用户手册
    目的：使用非专门术语，充分描述该软件系统所具有的功能以及基本的使用方法，使用户了解该软件的用途，正确使用它。
    内容：引言( 编写目的、背景、定义、参考资料等)，
         用途(功能、性能、安全保密)、
         运行环境(硬件环境、支撑软件、数据结构)和
         使用过程(安装与初始化、输入、输出、文卷查询、出错处理与恢复、终端操作)

操作手册
    目的：向操作人员提供该软件每一个运行的具体过程的有关知识，包括操作方法的细节。
    内容：引言( 编写目的、背景、定义、参考资料等)、
         软件概述(软件的结构、程序彪、文卷表)、
         安装与初始化、
         运行说明(运行彪、运行步骤、说明)、
         非常规过程和远程操作

模块开发卷宗
     目的：记录和汇总低层次开发的进度和结果，以便对整个模块开发工作进行管理和复审，并为将来的维护提供有用的技术信息。
     内容：标题、模块开发情况表、功能说明、设计说明、源代码清单、测试说明和复审的结论。

11 测试计划
   目的：提供对该软件的测试计划
   内容：引言( 编写目的、背景、定义、参考资料等)，
        计划(软件说明、测试内容、各项测试)、
        测试设计说明书和评价准则(范围、数据整理、尺度)

12 测试分析报告
   目的：
        把集成测试和确认测试的结果、
        发现以及分析写成文件家以记载。
   内容：引言、测试概要、测试结果以及发现、对软件功能的分析、分析摘要和测试资源消耗

13 开发进度月报
   目的：及时向有关管理部门汇报项目开发的进度和情况，以便及时发现和处理开发过程中出现的问题。
   内容：标题、工程进度与状况、资源耗用与状态、经费支出与状态、下个月的工作计划以及建议等

14 项目开发总结报告
   目的：总结本项目开发工作的经验，
        说明实际取得的开发结果以及对整个开发工作的各个方面的评价。
   内容：引言( 编写目的、背景、定义、参考资料等)，
        实际开发结果(产品、主要功能和性能、基本流程、进度、费用)，
        开发工作评价(对生产效率、产品质量和技术方法的评价，对出错原因的分析)，
        经验和教训

..................

一、制定计划
    该阶段
      确定系统的目标，
      提出系统的功能、性能、接口、可靠性、可用性等方面的基本要求，
      进行系统开发的可行性分析，
      提出可行性分析报告，
      制定系统开发的实施计划。

二、需求分析
    编制系统
      需求分析说明书和初步的用户手册，作为今后系统开发工作的依据。

三、软件设计
    根据系统的需求设计系统的 体系结构和软件模块。
    软件设计分为两个阶段：
            概要设计和详细设计。
    概要设计：
             设计软件系统的总体结构，即模块结构，定义每个模块的主要功能和模块之间的关系。
    详细设计：
             进行模块设计，详细定义各模块的数据结构、算法、接口等，作为以后编码工作的依据。
             如果系统中使用了数据库，则在该阶段还要进行数据库的逻辑设计和物理设计。完成时应提交软件设计说明书。

四、编码阶段
    选择开发语言和相关工具，实现系统各功能。

五、测试阶段
    测试软件，排除错误，保证软件质量。
    三个步骤：单元测试、组装测试和系统测试。
 由一个简单的模块测试，然后把模块组装（组合）在一起测试，最后整体测试。

六、运行与维护


....................................

记录一下自己的心得体会，分享给大家，有不足之处，望指教。

第一阶段：假想阶段

业务流程描述工具：IBM BMP;Software AG ARIS;

文档工具：Microsoft Office; Microsoft Visio; Adobe Reader;

第二阶段：需求开发阶段

业务流程描述工具：IBM BMP; Software AG ARIS;

文档工具：Microsoft Office; Microsoft Visio; Adobe Reader;

原型制作工具：Balsamiq Mockups;

团队合作信息共享平台: Microsoft Team Foundation; Microsoft Sharepoint;

第三阶段：设计阶段

业务建模工具，数据建模工具。


业务流程描述工具：IBM BMP; Software AG ARIS;

文档工具：Microsoft Office; Microsoft Visio; Adobe Reader;

原型制作工具：Balsamiq Mockups;

团队合作信息共享平台: Microsoft Team Foundation; Microsoft Sharepoint;

平面设计工具: Adobe Photoshop;
业务建模工具: Embarcadero ER/Studio;

数据建模工具: Embarcadero ER/Studio; SAP Power Builder;

第四阶段：实现阶段

文档工具：Microsoft Office; Microsoft Visio; Adobe Reader;


团队合作信息共享平台： Microsoft Team Foundation; Microsoft Sharepoint;

业务建模工具： Embarcadero ER/Studio;

数据建模工具： Embarcadero ER/Studio; SAP Power Builder;

源代码管理工具：Microsoft Team Foundation; 
源代码编辑工具: Microsoft Visual Studio;

源代码审计工具: Microsoft FxCop;

缺陷管理工具：Microsoft Team Foundation;

第五阶段：质量检查阶段

文档工具：Microsoft Office; Microsoft Visio; Adobe Reader;


团队合作信息共享平台： Microsoft Team Foundation; Microsoft Sharepoint;

缺陷管理工具：Microsoft Team Foundation;

自动化功能测试工具：Microsoft Team Foundation; HP ALM; 
性能测试工具：Microsoft Team Foundation; HP ALM; 

第六阶段：部署阶段


文档工具：Microsoft Office; Microsoft Visio; Adobe Reader;


团队合作信息共享平台： Microsoft Team Foundation; Microsoft Sharepoint;

自动化部署工具: DSelect;
密码管理工具: Password Safe;


.....................

计划阶段
   获得需求、进行可行性调研分析、编写可行性分析报告、评审会议

需求分析阶段
   通过不断沟通充分了解客户业务，获取充分的业务需求，完善用户需求和功能性需求
   了解相关约束及非功能性需求
   编写需求规格说明书
   召开需求评审会议
   客户确定需求
   签订合同
   编写项目计划说明书
   召开项目启动会议

概要设计阶段
    根据《需求分析说明书》，
    进行用例分析
    ,获得充分而有效的用例。
    编写界面原型，
    编写编码规范和界面风格规范,
    数据库设计规范。
    用uml工具画用例图，
    编写有效的用例规约文档。
    划分项目功能模块.
    评审用例及用例规约文档。

详细设计阶段
     根据完整的用例及需求进行分析，
     获得数据库所需的相关信息,
     画数据库E-R图，
     编写数据设计说明书.
     进行数据库建模。
     进行详细的分析，
     用uml工具画类图，
     确定每个功能模块的子功能，
     抽取项目的公共部分成为一个公共模块。
     确定项目的架构基础。
     确定需要用到的类及类成员和方法。
     确定一些辅助类及方法。
     对每一个用例都用uml工具画出顺序图。
     编写详细设计说明书，
     评审详细设计说明书,
     进行基础框架搭建。
     列出任务清单，进行任务分配。

编码阶段：
     以小组的形式进行代码编写，
     编写单元测试用例，
     每完成一个类都要进行单元测试。
     每完成一个功能点和模块都要进行集成测试。
     确保每一个功能点和模块完成后都是一个可以看得见、摸得着的产品。
     而不是等到最后才进行统一的调试和搭配。
     每天都要对代码进行检查和优化，也就是所谓的重构。

测试阶段：根据测试计划对项目进行系统测试，以及用户的验收测试

产品发布：
         交付完整的产品和设计文档。
         把产品布署到客户的计算机上,确保产品的正常运行。客户签收。

维护阶段：为客户提供技术保障，
        对产品进行相应的维护和升级工作。

软件常见开发模型

       瀑布模型：最经典的过程模型，适用于需求明确，规模较小的项目

       喷泉模型：迭代，无间隙特点，适用于面向对象的软件开发过程

       螺旋模型：

       MSF模型：微软解决方案过程模型

单元测试：和开发同步的测试。

集成测试：一个大的功能模块测试。

系统测试：整个项目完成后发布测试。

验收测试：交付客户测试。

考官：令狐冲，能谈谈你们是怎么样对这个项目开发的吗？

令狐冲：首先，
 我们这个项目已经有了一个基本的用户原始需求。
 但这是不够的，我们都知道需求分析是十分重要的，
 所以我们在用户原始需求文档的基础上，再次进行了分析，通过不断的与客户沟通，
 充分的了解和熟悉用户的业务，完善了业务需求和功能需求。
 还对用户业务需求和功能需求分析完善为实现软件的必须的非功能性需求。
 得出项目需求规格说明书，经过评审会议确认通过。

 根据需求规格说明书进行用例分析，通过分析和讨论找出充分的有效用例，
 并用Rose画用例图。
 对每一个用例进行详细的分析，完成每个用例的用例规约文档，并编写界面原型。
 划分项目模块。最后对用例及用例规约文档进行评审验证。
 编写”代码编写规范”及界面风格规范，数据库设计规范,编写概要设计说明书。

根据需求规格说明书和分析各个用例规约文档，获得数据库的基本信息原型。
也可以说是数据库表的草稿，根据数据库表草搞进行分析，进行数据库设计和优化。
编写数据库设计说明书。
采用PowerDesigner进行数据库建模，并生成SQL脚本。确定项目框架，设计公共模块和辅助类。
根据对数据库模型和用例规约文档的分析，列出对象清单和理清对象关系。
用Rose来画类图。对每一个用例都用rose画出时序图。
编写详细设计说明书。列出任务清单，分组进行代码编写。

在代码编写阶段，
先统一完成所有的实体类。对于非实体类则先完成类的框架，也就是只写方法和注释文字。
具体方法的实现暂时为空。然后再进行代码填写。
每完成一个类的代码编译通过后都要进行重构和单元测试。
每完成一个功能和模块都由会由小组长进行集成测试。
使得完成的模块是一个真正可以运行的，可见的功能实现。

在各个小组都完成自己的模块后就进行模块整合，进行一次大规模的集成测试。
然后把产品产给产品测试小组进行系统测试。
————————————————
版权声明：本文为CSDN博主「love_小新」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/u010705742/article/details/84973296


.产品立项
 商务合同、
.需求分析、需求评审、
.确定开发周期
.方案设计
  应用架构、
  数据架构、
  系统架构、
  集成架构、
  开发计划

  构建与集成
    功能设计文档
    技术设计文档
    质量管理
    工程管理
    单元测试
    系统接口说明
    系统开发、UI、编程

    实施上线
       部署方案
       服务器环境
       集成与测试
       用户手册
       培训计划
       数据模板
       系统配置

完工
       试运行报告、验收报告


SIT测试
UAT测试
用户培训
运维支持
性能优化


工作看板:
  今日工作:
     1) 整理出需求到开发上线的整体流程
     2）细化了
          下单主链路：异常场景的处理: 丢单现象MQ优化设计中
          下单主链路服务重试机制及幂等性问题
  明日安排:
    1) 继续细化其它部分
    2）看能否与昆哥及相关人员进行会议商议
