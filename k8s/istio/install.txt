.安装metrics-server ( 否则istio-injection失败)

.安装istio
1)master01 (1cpu 2GB    swap 4G)
$ export https_proxy=http://192.168.56.101:8889  
$ export http_proxy=http://192.168.56.101:8889  
$ export no_proxy="127.0.0.1,192.168.0.0/16,10.0.0.0/16,172.0.0.0/8,a.com"

$ curl -L https://istio.io/downloadIstio | sh -

$ mv istio-1.8.1 /usr/local

$ grep -R istio /etc/profile || sed -i 'aexport PATH=$PATH:/usr/local/istio-1.8.1/bin' /etc/profile

$ . /etc/profile

$ systemctl stop haproxy
$ systemctl stop haproxy
$ systemctl start haproxy


2)node01/node02   ( 2cpu 2.5GB  swap 4G )
$ vim /etc/docker/daemon.json 
{
  "registry-mirrors": [ "https://docker.mirrors.ustc.edu.cn","https://quay.mirrors.ustc.edu.cn","https://registry.aliyuncs.com","https://registry.docker-cn.com","http://hub-mirror.c.163.com" ]
}

$ cat /etc/systemd/system/docker.service.d/http-proxy.conf 
[Service]
Environment="HTTP_PROXY=http://192.168.56.1:8889" "HTTPS_PROXY=http://192.168.56.1:8889" "NO_PROXY=192.168.0.0/16,172.0.0.0/8,10.0.0.0/8,127.0.0.0,localhost,ustc.edu.cn,aliyuncs.com,docker-cn.com,163.com"

$ systemctl daemon-reload
$ systemctl restart docker
$ systemctl status docker

$ telnet 192.168.56.100 4443

$ istioctl manifest install --set profile=demo  (需要等很久)

$ kubectl label namespace default istio-injection=enabled

$ kubectl -n istio-system get deploy
NAME                   READY   UP-TO-DATE   AVAILABLE   AGE
istio-ingressgateway   1/1     1            1           49m
istiod                 1/1     1            1           49m$ kubectl -n istio-system get pods

$ istioctl profile list
  Istio configuration profiles:
    default
    demo
    empty
    minimal
    openshift
    preview
    remote

$ kubectl -n default get pods

$ kubectl label namespace default istio-injection=enabled


..................Example Bookinfo...........................
$ cd /usr/local/istio-1.8.1
$ kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml (等很久）
$ kubectl get services
  NAME          TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE
details       ClusterIP   10.0.0.31    <none>        9080/TCP   6m
kubernetes    ClusterIP   10.0.0.1     <none>        443/TCP    7d
productpage   ClusterIP   10.0.0.120   <none>        9080/TCP   6m
ratings       ClusterIP   10.0.0.15    <none>        9080/TCP   6m
reviews       ClusterIP   10.0.0.170   <none>        9080/TCP   6m

$ kubectl get pods
NAME                             READY     STATUS    RESTARTS   AGE
details-v1-1520924117-48z17      2/2       Running   0          6m
productpage-v1-560495357-jk1lz   2/2       Running   0          6m
ratings-v1-734492171-rnr5l       2/2       Running   0          6m
reviews-v1-874083890-f0qf0       2/2       Running   0          6m
reviews-v2-1343845940-b34q5      2/2       Running   0          6m
reviews-v3-1813607990-8ch52      2/2       Running   0          6m

$ kubectl exec "$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')" -c ratings -- curl productpage:9080/productpage | grep -o "<title>.*</title>"
  <title>Simple Bookstore App</title>


................ISTIO INGRESS GATEWAY.............................

.配置GATEWAY
$ kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml

$ kubectl get gateway
        NAME         AGE
  bookinfo-gateway   32s


.获取GATEWAY配置
$ export INGRESS_PORT=$(kubectl -n istio-system get svc istio-ingressgateway -o "jsonpath={.spec.ports[?(@.name=='http2')].nodePort}")

$ export SECURE_INGRESS_PORT=$(kubectl -n istio-system get svc istio-ingressgateway -o "jsonpath={.spec.ports[?(@.name=='https')].nodePort}")

$ export INGRESS_HOST=$(kubectl -n istio-system get pod -l istio=ingressgateway -o "jsonpath={.items[0].status.hostIP}")

$ export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT

.使用GATEWAY访问/productpage
$ echo http://$GATEWAY_URL/productpage
    http://192.168.56.104:30321/productpage
    
$ curl -v -I  http://$GATEWAY_URL/productpage
* About to connect() to 192.168.56.104 port 30321 (#0)
*   Trying 192.168.56.104...
* Connected to 192.168.56.104 (192.168.56.104) port 30321 (#0)
> HEAD /productpage HTTP/1.1
> User-Agent: curl/7.29.0
> Host: 192.168.56.104:30321
> Accept: */*
> 
< HTTP/1.1 200 OK
HTTP/1.1 200 OK
< content-type: text/html; charset=utf-8
content-type: text/html; charset=utf-8
< content-length: 3889
content-length: 3889
< server: istio-envoy
server: istio-envoy
< date: Fri, 15 Jan 2021 12:01:25 GMT
date: Fri, 15 Jan 2021 12:01:25 GMT
< x-envoy-upstream-service-time: 10850
x-envoy-upstream-service-time: 10850

< 
* Connection #0 to host 192.168.56.104 left intact
